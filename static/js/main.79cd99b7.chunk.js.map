{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","state","goods","isVisible","isReversed","sortBy","none","start","setState","reversed","sortAlphabetically","name","sortByLength","length","reset","this","listedGoods","sort","good1","good2","localeCompare","reverse","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,kFAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,eAAAA,I,oBAAAA,M,SAaCE,E,4MACJC,MAAQ,CACNC,MAAM,GAAD,OAAMH,GACXI,WAAW,EACXC,YAAY,EACZC,OAAQP,EAAOQ,M,EAGjBC,MAAQ,kBACN,EAAKC,SAAS,CAAEL,WAAW,K,EAG7BM,SAAW,WACT,EAAKD,UAAS,SAACP,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gB,EAIvBM,mBAAqB,WACnB,EAAKF,SAAS,CACZH,OAAQP,EAAOa,Q,EAInBC,aAAe,WACb,EAAKJ,SAAS,CACZH,OAAQP,EAAOe,U,EAInBC,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,OAAQP,EAAOQ,Q,4CAInB,WACE,MAKIS,KAAKd,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,OAGEW,EAAW,YAAOd,GAEtB,OAAQG,GACN,KAAKP,EAAOa,KACVK,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MACxD,MAEF,KAAKrB,EAAOe,OACVG,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAML,OAASM,EAAMN,UACzD,MAEF,QACEG,EAAW,YAAOd,GAOtB,OAJIE,GACFY,EAAYK,UAIZ,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,oBACEnB,GACA,wBACEoB,KAAK,SACLC,QAAST,KAAKR,MACde,UAAU,4CAHZ,sBASHnB,GACC,sBAAKmB,UAAU,uBAAf,UACE,wBACEC,KAAK,SACLC,QAAST,KAAKN,SACda,UAAU,4BAHZ,qBAQA,wBACEC,KAAK,SACLC,QAAST,KAAKL,mBACdY,UAAU,4BAHZ,iCAQA,wBACEC,KAAK,SACLC,QAAST,KAAKD,MACdQ,UAAU,4BAHZ,mBAQA,wBACEC,KAAK,SACLC,QAAST,KAAKH,aACdU,UAAU,4BAHZ,+BAUHnB,GACC,oBAAImB,UAAU,MAAd,SACGN,EAAYS,KAAI,SAACC,GAAD,OACf,6BACGA,kB,GAvHDC,IAAMC,WAkIT5B,IC5Jf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.79cd99b7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\ntype State = {\n  goods: string[];\n  isVisible: boolean;\n  isReversed: boolean;\n  sortBy: SortBy;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    isVisible: false,\n    isReversed: false,\n    sortBy: SortBy.none,\n  };\n\n  start = () => (\n    this.setState({ isVisible: true })\n  );\n\n  reversed = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortBy.name,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortBy.length,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortBy.none,\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      isVisible,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    let listedGoods = [...goods];\n\n    switch (sortBy) {\n      case SortBy.name:\n        listedGoods.sort((good1, good2) => (good1.localeCompare(good2)));\n        break;\n\n      case SortBy.length:\n        listedGoods.sort((good1, good2) => (good1.length - good2.length));\n        break;\n\n      default:\n        listedGoods = [...goods];\n    }\n\n    if (isReversed) {\n      listedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App container\">\n        <div className=\"box\">\n          <div className=\"goods-bar\">\n            <h1 className=\"title\">Goods</h1>\n            {!isVisible && (\n              <button\n                type=\"button\"\n                onClick={this.start}\n                className=\"button is-primary is-rounded start-button\"\n              >\n                Start\n              </button>\n            )}\n          </div>\n          {isVisible && (\n            <div className=\"field is-grouped box\">\n              <button\n                type=\"button\"\n                onClick={this.reversed}\n                className=\"button is-info is-rounded\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortAlphabetically}\n                className=\"button is-info is-rounded\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reset}\n                className=\"button is-info is-rounded\"\n              >\n                Reset\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n                className=\"button is-info is-rounded\"\n              >\n                Sort by length\n              </button>\n            </div>\n          )}\n\n          {isVisible && (\n            <ul className=\"box\">\n              {listedGoods.map((good) => (\n                <li>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}